#!/usr/bin/python
#import signal
#signal.signal(signal.SIGINT, signal.SIG_DFL)
import re
import os
import sys
import shutil
from PyQt4 import QtCore, QtGui
import MotifColors
import Globals
from MotifColors import colorize_bg
from MiscFun import *

import time

screenHeight=600
def prepareBackDrops(opts):
    global screenHeight
    screenHeight=QtGui.QDesktopWidget().screenGeometry().height()
    for i in range(1,opts.nworkspaces+1):
        wscol=opts.workspacecolors[i]
        backdropsrc=opts.workspacebackdrops[i]
        if backdropsrc=="Gradient":scaletoheight=True
        else:scaletoheight=False
        prepareBackdrop(opts,i,backdropsrc,wscol,scaletoheight)
#all backdrops are called backdrop.pm, converted to backdrop.png
#def prepareBackdrop(self,i,backdropsrc,wscol,scaletoheight):
def prepareBackdrop(opts,i,backdropsrc,wscol,scaletoheight):
    print Globals.backdropdir
    global screenHeight
    scaleopts=''
    if scaletoheight:scaleopts='-geometry x{screenHeight}'.format(**globals())
    #colorize backdrop to given motif colorset. produces xpm
    palettefile=os.path.join(Globals.palettedir,opts.currentpalettefile)
    backdropin=os.path.join(Globals.backdropdir,"""{backdropsrc}.pm""".format(**locals()))
    backdropoutxpm=os.path.join(Globals.backdropdir,"""BACKDROP{i}.xpm""".format(**locals()))
    #todo checkfile shouldnt exit the program
    colorize_bg(checkFile(backdropin),backdropoutxpm,checkFile(palettefile),opts.ncolors,wscol)
    #convert original colored cde pm file to fit screen if required
    backdropoutpng=os.path.join(Globals.backdropdir,"""BACKDROP{i}.png""".format(**locals()))
    if Globals.convertversion>0:
        cmd="""
        convert \
        {scaleopts} \
        {backdropoutxpm} \
        {backdropoutpng}
        """.format(**locals())
        execWSysLibsStdO(cmd)

#IN LAPTOP XUBUNTU IT IS THIS
#/backdrop/screen0/monitor0/workspace0/last-image
#/backdrop/screen0/monitor0/workspace1/last-image
#BUT IN VIRTUALBOX INSTALL OF XUBUNTU IT WAS
#/backdrop/screen0/monitorVGA-1/workspace0/last-image
#/backdrop/screen0/monitorVGA-1/workspace1/last-image
#THERE WERE ALSO OTHER MONITOR AND SCREEN ENTRIES IN SETTINGS EDITOR
#DONT KNOW WHAT THOSE ARE FOR ONLY THE ONES WITH 'WORKSPACEN' SEEM TO
#AFFECT THE ACTUAL BACKGROUND. DUNNO.
#20221030
#didnt work in virtualbox, so modified to set the backrop file in all
#'monitor' entries for xfce4-desktop property. 
def xfconfWorkspacePaths():
    #alle entries van verschillende montiros met 'workspace0' erin zet in wspaths
    #dit zijn de entries monitor0/monitor1/montiorVga1 etc etc, elk met alle workspaces
    #als subdir
    cmd="xfconf-query -c xfce4-desktop --list|grep workspace0 |grep last-image"
    cmdout=execWSysLibsStdO(cmd).splitlines()
    wspaths=[]
    for i in range(0,len(cmdout)):
        match=re.search('(^.*workspace)',cmdout[i])
        wspaths.append(match.group(1))
    return wspaths

def initXfceBackdrops(opts):
    print "initXfceBackdrops..."
    cmd="""\
    xfconf-query -c xfce4-desktop -p /backdrop/single-workspace-mode -t bool -s false --create
    xfconf-query -c xfce4-desktop -p /backdrop/single-workspace-mode -s false 
    """
    print cmd
    execWSysLibNonBlock(cmd)

    #set xfce backrops to BACKDROPN.png. Those are generated by mainwindow.prepareBackDrops(self):
    N=opts.nworkspaces
    for i in range(1,N+1):
        setXfBackdrop(i)

def setXfBackdrop(workspacenr):
    print """setXfBackdrop {workspacenr}""".format(**locals())
    #voor elk van deze paths moet de backdrop worden gezet
    workspacepaths=xfconfWorkspacePaths()
    bddir=Globals.backdropdir
    bgfile=os.path.join(Globals.backdropdir,"""BACKDROP{workspacenr}.png""".format(**locals()))
    #why call workspace 1 worspace 0. But whatever nubering starts at 0, but the name is 1
    workspacenr-=1

    #20221030 aangepast om VA monitors de bd te zetten
    N=len(workspacepaths)
    for i in range(0,N):
        workspacepath=workspacepaths[i]
        #needs full path 
        cmd= """xfconf-query -c xfce4-desktop -p {workspacepath}{workspacenr}/last-image -s {bgfile} """.format(**locals())
        print cmd
        execWSysLibNonBlock(cmd)
        cmd= """xfconf-query -c xfce4-desktop -p {workspacepath}{workspacenr}/image-style -s 2""".format(**locals())
        print cmd
        execWSysLibNonBlock(cmd)











